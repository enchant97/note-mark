name: Publish App

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: "Install Rust Toolchain"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: "Install Node"
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: rustup target add wasm32-unknown-unknown
        working-directory: frontend
      - run: npm i
        working-directory: frontend
      - run: npm run wasm
        working-directory: frontend
      - run: npm run build
        working-directory: frontend
      - name: Upload built files
        uses: actions/upload-artifact@v3
        with:
          name: built-frontend
          path: ./dist

  publish-images:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        service_name:
          - "backend"
          - "frontend"
        include:
          - service_name: backend
            docker_file: backend/Dockerfile
          - service_name: frontend
            docker_file: frontend/Dockerfile.pre-built
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download built files
        uses: actions/download-artifact@v3
        with:
          name: built-frontend
          path: ./frontend/dist
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}-${{ matrix.service_name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service_name }}
          file: ${{ matrix.docker_file }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
